name: EDD
on:
  workflow_call:
    inputs:
      slug:
        required:  true
        type: string
      source_url:
        required: true
        type: string
      endpoint_url:
        required: true
        type: string
      method:
        required: false
        type: string
        default: 'POST'
    secrets:
      LICENSE_KEY:
        required: true

jobs:
  build:
    name: Update plugin
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # See https://easydigitaldownloads.com/docs/software-licensing-api/
      - name: Retrieve the license information (POST)
        if: ${{ inputs.method == 'POST' }}
        run: |
          {
            echo 'REMOTE_RESPONSE<<EOF'
            curl -s -d "edd_action=get_version&license=${{ secrets.LICENSE_KEY }}&item_name=${{ inputs.slug }}&url=${{ inputs.source_url }}" ${{ inputs.endpoint_url }}
            echo -e "\n"
            echo 'EOF'
          } >> "$GITHUB_ENV"

      # See https://easydigitaldownloads.com/docs/software-licensing-api/
      - name: Retrieve the license information (GET)
        if: ${{ inputs.method == 'GET' }}
        run: |
          {
            echo 'REMOTE_RESPONSE<<EOF'
            curl -s \
              --get \
              --data-urlencode "edd_action=get_version" \
              --data-urlencode "license=${{ secrets.LICENSE_KEY }}" \
              --data-urlencode "item_name=${{ inputs.slug }}" \
              --data-urlencode "url=${{ inputs.source_url }}" \
              "${{ inputs.endpoint_url }}""
            echo -e "\n"
            echo 'EOF'
          } >> "$GITHUB_ENV"

      - name: Update repo
        uses: generoi/github-action-update-plugins@master
        with:
          download_url: ${{ fromJson(env.REMOTE_RESPONSE).download_link }}
          version: ${{ fromJson(env.REMOTE_RESPONSE).new_version }}
          changelog_extract: |
            awk -v ver=${{ fromJson(env.REMOTE_RESPONSE).new_version }} '/^= / { if (p) { exit }; if ($2 == ver) { p=1; next } } p && NF' readme.txt 2>&1
